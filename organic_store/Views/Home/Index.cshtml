@model IEnumerable<organic_store.Models.Products>
@{
    ViewBag.Title = "Trang Chủ";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // Ép kiểu ViewBag.Stores sang List<CuaHang> để sử dụng
    var stores = ViewBag.Stores as List<organic_store.Models.CuaHang>; 
    string selectedStore = ViewBag.SelectedStore;
    
    // FIX: Lấy Mã DM hiện tại (được Controller truyền vào)
    string selectedMaDM = ViewBag.SelectedMaDM ?? "ALL";

    // FIX: Hardcode Danh Mục và Mã DM (Dữ liệu tĩnh)
    var danhMucList = new List<Tuple<string, string, string>>
{
        Tuple.Create("Rau Củ Tươi", "DM01", "fas fa-carrot"),
        Tuple.Create("Trái Cây", "DM02", "fas fa-apple-alt"),
        Tuple.Create("Gia Vị Thiên Nhiên", "DM04", "fas fa-pepper-hot"),
        Tuple.Create("Ngũ Cốc Hữu Cơ", "DM03", "fas fa-seedling"),
    };
}

<link rel="stylesheet" href="~/assets/css/home.css">
<link rel="stylesheet" href="~/assets/css/_Layout.css">
<style>
    /* FIX: Thêm style cho trạng thái Active filter */
    .category-card {
        border: 2px solid transparent;
        transition: border-color 0.3s;
    }

        .category-card.active-filter {
            border-color: #4caf50;
        }

        .category-card:nth-child(1) .category-icon {
            color: #66bb6a;
        }

        .category-card:nth-child(2) .category-icon {
            color: #66bb6a;
        }

        .category-card:nth-child(3) .category-icon {
            color: #66bb6a;
        }

        .category-card:nth-child(4) .category-icon {
            color: #81c784;
        }
</style>

<div id="mainCarousel" class="carousel slide" data-bs-ride="carousel">
    @* ... (Carousel code giữ nguyên) ... *@
</div>

<section class="category-section">
    <div class="container">
        <h2 class="section-title">Danh Mục Sản Phẩm</h2>
        <div class="row g-4">

            @* FIX: Chuyển các thẻ Div thành A để gọi hàm lọc *@
            @foreach (var dm in danhMucList)
            {
                <div class="col-6 col-md-3">
                    <a href="javascript:void(0)" onclick="filterAll(null, '@dm.Item2')" class="text-decoration-none">
                        <div class="category-card @(selectedMaDM == dm.Item2 ? "active-filter" : "")">
                            <div class="category-icon"><i class="@dm.Item3"></i></div>
                            <h6>@dm.Item1</h6>
                        </div>
                    </a>
                </div>
            }
        </div>
    </div>
</section>

<section class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="section-title mb-0">Tất Cả Sản Phẩm</h2>

        <div class="store-filter d-flex align-items-center">
            <label for="storeSelect" class="form-label mb-0 me-2 fw-bold">Xem sản phẩm tại:</label>
            <select id="storeSelect" class="form-select" style="width: 250px;" onchange="filterAll(this.value)"> @* FIX: Gọi hàm filterAll() *@
                <option value="ALL" @(selectedStore == "ALL" ? "selected" : "")>-- Tất cả Cửa hàng --</option>
                @if (stores != null)
                {
                    foreach (var store in stores)
                    {
                        <option value="@store.MaCH" @(selectedStore == store.MaCH ? "selected" : "")>
                            @store.DisplayName
                        </option>
                    }
                }
            </select>
        </div>
    </div>

    <div id="homeResult">
        @* Partial view hiển thị danh sách sản phẩm *@
        @Html.Partial("_ProductPartial", Model) 
    </div>

    @* Partial view phân trang *@
    @Html.Partial("_PaginationHome", new { maDM = selectedMaDM })
</section>

<script>
    // HÀM CHUNG XỬ LÝ LỌC 2 CHIỀU
    function filterAll(maCH, maDM) {
        // Lấy MaCH hiện tại từ Dropdown hoặc tham số
        const currentMaCH = maCH || $('#storeSelect').val() || '@(ViewBag.SelectedStore ?? "ALL")';

        // Lấy MaDM hiện tại từ URL (Nếu không có tham số, lấy từ ViewBag)
        const currentMaDM = maDM || '@(ViewBag.SelectedMaDM ?? "ALL")'; 

        // Xây dựng URL
        const url = '@Url.Action("Index", "Home")' + '?maCH=' + currentMaCH + '&maDM=' + currentMaDM;
        window.location.href = url;
    }

    // Auto slide carousel
    var carousel = new bootstrap.Carousel(document.getElementById('mainCarousel'), {
        interval: 3000,
        wrap: true
    });
</script>
@section Scripts {
    <script src="~/assets/js/live-search.js"></script>
    <script>
        // CẬP NHẬT LOGIC LIVE SEARCH: Đảm bảo gửi kèm MaCH VÀ MaDM
        $(document).ready(function () {
            // Lấy MaDM hiện tại từ Query String
            const getMaDM = () => {
                const urlParams = new URLSearchParams(window.location.search);
                return urlParams.get('maDM') || 'ALL';
            };
            
            // Cập nhật URL cho Live Search
            const updateSearchUrl = () => {
                const maCH = $('#storeSelect').val() || '@(ViewBag.SelectedStore ?? "ALL")';
                const maDM = getMaDM();
                
                const searchUrl = '@Url.Action("Search", "Home")' + '?maCH=' + maCH + '&maDM=' + maDM;
                $('.live-search').attr('data-url', searchUrl);
            };

            // Khởi tạo và cập nhật khi Store thay đổi
            updateSearchUrl();
            $('#storeSelect').change(updateSearchUrl);
            
            // Lấy MaDM từ URL và gán active cho Navbar (nếu có)
            const currentMaDM = getMaDM();
            $(`a.category-link[href*="maDM=${currentMaDM}"]`).addClass('active');
        });
    </script>
}