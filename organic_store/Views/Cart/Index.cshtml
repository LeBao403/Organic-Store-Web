@model List<organic_store.Models.CartItem>

@{
    ViewBag.Title = "Giỏ hàng";
    var storeName = ViewBag.StoreName as string ?? "Tất cả";
}

<div class="container my-5">
    <h2 class="mb-4">
        <i class="fas fa-shopping-cart text-success me-2"></i> Giỏ hàng của bạn tại @storeName
    </h2>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info text-center">Giỏ hàng của bạn tại cửa hàng này hiện đang trống.</div>
    }
    else
    {
        <table class="table table-bordered align-middle" id="cart-table">
            <thead class="table-light">
                <tr>
                    <th class="text-center">Hình ảnh</th>
                    <th>Tên sản phẩm</th>
                    <th class="text-center">Đơn giá</th>
                    <th class="text-center" style="width:160px;">Số lượng</th>
                    <th class="text-center">Thành tiền</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    // ⭐ SỬA LỖI 1: Đảm bảo giá trị tồn kho luôn >= 0 trước khi gán vào HTML
                    long safeStockValue = item.Product.SoTon < 0 ? 0 : item.Product.SoTon;

                    <tr data-id="@item.Product.MaSP" data-price="@item.Product.GiaBan" data-stock="@safeStockValue">
                        <td class="text-center">
                            <img src="@item.Product.HinhAnhURL" alt="@item.Product.TenSP"
                                 width="70" height="70" class="rounded shadow-sm" />
                        </td>
                        <td>@item.Product.TenSP</td>
                        <td class="text-center">@String.Format("{0:N0}đ", item.Product.GiaBan)</td>
                        <td class="text-center">
                            <div class="input-group input-group-sm justify-content-center">
                                <button class="btn btn-outline-secondary btn-qty" data-action="decrease">-</button>
                                <input type="text" class="form-control text-center qty-input"
                                       value="@item.Quantity" readonly
                                       style="max-width:50px;" />
                                <button class="btn btn-outline-secondary btn-qty" data-action="increase">+</button>
                            </div>

                            @if (safeStockValue == 0)
                            {
                                <p class="text-danger small mt-1 mb-0">Hết hàng!</p>
                            }
                            else if (item.Quantity >= safeStockValue)
                            {
                                <p class="text-warning small mt-1 mb-0">Tối đa: @safeStockValue</p>
                            }

                        </td>
                        <td class="text-center text-success fw-bold item-total">
                            @String.Format("{0:N0}đ", item.Total)
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-end mt-3">
            <h5 class="fw-bold">Tổng cộng: <span id="cart-subtotal" class="text-danger">@String.Format("{0:N0}đ", Model.Sum(c => c.Total))</span></h5>
        </div>

        <div class="text-end mt-3">
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">← Tiếp tục mua hàng</a>
            @if (Session["CurrentUser"] != null)
            {
                <a href="@Url.Action("Checkout", "Cart")" class="btn btn-primary ms-2">Thanh toán</a>
            }
            else
            {
                <a href="@Url.Action("Login", "Account")" class="btn btn-primary ms-2">Đăng nhập để thanh toán</a>
            }
        </div>
    }
</div>

<style>
    .container.body-content {
        margin-top: 100px;
    }
</style>

@section scripts {
    <script>
        $(document).on("click", ".btn-qty", function () {
            var btn = $(this);
            var action = btn.data("action");
            var row = btn.closest("tr");
            var input = row.find(".qty-input");
            var qty = parseInt(input.val());
            var price = parseFloat(row.data("price"));
            var productId = row.data("id");
            var stock = parseInt(row.data("stock"));
            var storeId = "@ViewBag.SelectedStore";

            // ⭐ SỬA LỖI 2: PHÒNG THỦ JS - Đảm bảo tồn kho không âm
            if (stock < 0) {
                stock = 0;
            }

            if (action === "increase") qty++;
            else if (action === "decrease") qty--;

            if (qty < 1) {
                // Cho phép qty = 0 để xóa sản phẩm khỏi giỏ hàng
                qty = 0;
            }

            // ⭐ SỬA LỖI 3: Chỉ giới hạn nếu tồn kho > 0
            if (stock > 0 && qty > stock) {
                qty = stock;
                // Hiển thị cảnh báo trực quan cho người dùng
                alert(`⚠️ Số lượng không được vượt quá tồn kho tối đa là ${stock}!`);
            }

            // Nếu tồn kho = 0, ngăn không cho tăng số lượng
            if (stock === 0 && qty > 0) {
                qty = 0;
            }


            input.val(qty);

            // Bắt đầu gọi AJAX để cập nhật giỏ hàng trên Server
            $.ajax({
                url: "/Cart/UpdateQuantity",
                type: "POST",
                data: { maSP: productId, quantity: qty, maCH: storeId },
                success: function (res) {
                    if (res.success) {
                        if (qty === 0) {
                            row.fadeOut(300, function () {
                                $(this).remove();
                                updateCartSubtotal();
                            });
                        } else {
                            var itemTotal = price * qty;
                            row.find(".item-total").text(itemTotal.toLocaleString('vi-VN') + "đ");
                            updateCartSubtotal();
                        }
                        $.get("/Cart/GetCartCount", function (data) {
                            $("#cart-count").text(data.count);
                        });
                    }
                    else if (res.message) {
                        // Xử lý thông báo lỗi từ server (ví dụ: "Số lượng không được vượt quá N!")
                        alert(res.message);

                        // Cập nhật lại số lượng trong ô input nếu Server báo lỗi
                        // (Bạn sẽ cần phải thêm logic này nếu muốn)
                        // Hiện tại, ta dựa vào việc Server tự trả về số lượng hợp lệ,
                        // nhưng nếu Server chỉ trả về lỗi, bạn nên giữ nguyên số lượng cũ hoặc refresh trang.

                    }
                },
                error: function (xhr) {
                    alert("Lỗi mạng hoặc lỗi server khi cập nhật giỏ hàng!");
                    // Nếu lỗi AJAX, ta không nên thay đổi số lượng
                    input.val(qty === 0 ? 1 : qty);

                }
            });
        });

       
        function updateCartSubtotal() {
            var subtotal = 0;
            var cartRowCount = $("#cart-table tbody tr").length; // Đếm số dòng (sản phẩm) còn lại

            $("#cart-table tbody tr").each(function () {
                var qty = parseInt($(this).find(".qty-input").val()) || 0;
                var price = parseFloat($(this).data("price"));
                subtotal += qty * price;
            });

            $("#cart-subtotal").text(subtotal.toLocaleString('vi-VN') + "đ");

            // ⭐ BƯỚC SỬA LỖI QUAN TRỌNG: XỬ LÝ KHI GIỎ HÀNG TRỐNG
            if (cartRowCount === 0) {
                // Ẩn bảng giỏ hàng và footer tổng cộng
                $("#cart-table").hide();
                $(".text-end.mt-3").hide();

                // Tạo một container duy nhất để hiển thị thông báo "Giỏ hàng trống"
                var emptyCartMessage = `
            <div id="empty-cart-alert" class="alert alert-info text-center mt-5">
                Giỏ hàng của bạn tại cửa hàng này hiện đang trống.
            </div>
        `;

                // 1. Kiểm tra nếu thông báo chưa tồn tại, thì thêm nó vào container chính
                if ($("#empty-cart-alert").length === 0) {
                    $(".container.my-5").append(emptyCartMessage);
                }

                // 2. Cập nhật tiêu đề
                $(".container.my-5 h2").html('<i class="fas fa-shopping-cart text-success me-2"></i> Giỏ hàng của bạn');

                // Lưu ý: Nếu bạn có các thông báo trống giỏ hàng khác trong View (ví dụ: ở cuối), bạn cần xóa chúng khỏi file .cshtml gốc.
            }
        }
    </script>
}
